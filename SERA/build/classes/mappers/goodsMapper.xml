<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sera.mappers.goods">

	<select id="getMainType" resultType="org.goods.domain.CategoryVO">
		select distinct main_type, depart from tbl_category
	</select>
	
	<select id="getSubType" resultType="org.goods.domain.CategoryVO">
		select category_id, main_type, sub_type from tbl_category
	</select>
	
	<select id="getSubTypeToMainType" resultType="org.goods.domain.CategoryVO">
		select category_id, main_type, sub_type from tbl_category
		where main_type = #{main_type}
	</select>
	
	<select id="selectGoodsOne" resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name, goods.goods_search_key, cate.category_id, goods.purchase_price, goods.sell_price, goods.amount, goods.shipping_fee,  goods.view_cnt, goods.sale_active, goods.goods_content, goods.goods_up_date,
		cate.main_type, cate.sub_type 
		from tbl_goods goods, tbl_category cate
		where goods.goods_id = #{goods_id} and goods.category_id = cate.category_id
		group by goods.goods_id
	</select>
	
	<select id="selectGoodsList" parameterType="Map" resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name 
		from tbl_goods goods, tbl_category cate
		where cate.main_type = #{main_type} and goods.goods_id != #{goods_id}
		and goods.sale_active != 'd'
		and goods.category_id = cate.category_id
	</select>
	
	<select id="relateGoodsList" parameterType="Map" resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name 
		from tbl_goods goods, tbl_category cate
		where cate.sub_type = #{sub_type} and goods.goods_id != #{goods_id}
		and goods.sale_active != 'd'
		and goods.category_id = cate.category_id
		limit 0, 10
	</select>
	
	<select id="getGoodsLimitByCount" resultType="org.goods.domain.GoodsVO">
		select goods_id, goods_image, goods_name, sell_price from tbl_goods
		order by goods_up_date desc
		limit 0, #{itemCnt}
	</select>
	
	<select id="selectGoodsListToSearch" parameterType="Map"  resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name, goods.sell_price
		from tbl_goods goods, tbl_category cate
		where goods.category_id = cate.category_id
		and goods.sale_active != 'd'
		<if test="!main_type.equals('all')">
			and cate.main_type = #{main_type}
			<if test="!sub_type.equals('all')">
				and cate.sub_type = #{sub_type}
			</if>
		</if>
		<if test="!search_value.equals('all')">
			and (goods_name like concat("%",#{search_value}, "%") or goods_search_key like concat("%",#{search_value}, "%"))
		</if>
		order by goods.goods_up_date desc
		limit #{page_cnt}, #{PAGE_MAX_GOODS_CNT}
	</select>
	
	<select id="getGoodsCnt" resultType="int">
		select count(goods.goods_id)
		from tbl_goods goods, tbl_category cate
		where goods.category_id = cate.category_id
		and goods.sale_active != 'd'
		<if test="!main_type.equals('all')">
			and cate.main_type = #{main_type}
			<if test="!sub_type.equals('all')">
				and cate.sub_type = #{sub_type}
			</if>
		</if>
		<if test="!search_value.equals('all')">
			and (goods_name like concat("%",#{search_value}, "%") or goods_search_key like concat("%",#{search_value}, "%"))
		</if>
	</select>
	
	<select id="getSkinTypes" resultType="String">
		select skin_type from tbl_goods
		where skin_type is not Null
		and skin_type != ""
		group by skin_type
	</select>
	
	<select id="selectGoodsListBySkinType" parameterType="Map"  resultType="org.goods.domain.GoodsVO">
		select goods_id, goods_image, goods_name, sell_price
		from tbl_goods
		where skin_type = #{skin_type}
		and sale_active != 'd'
		<if test="!search_value.equals('all')">
			and (goods_name like concat("%",#{search_value}, "%") or goods_search_key like concat("%",#{search_value}, "%"))
		</if>
		order by goods_up_date desc
		limit #{page_cnt}, #{PAGE_MAX_GOODS_CNT}
	</select>
	
	<select id="selectGoodsListBySkinTypeCnt" parameterType="Map"  resultType="int">
		select count(goods_id)
		from tbl_goods
		where skin_type = #{skin_type}
		and sale_active != 'd'
		<if test="!search_value.equals('all')">
			and (goods_name like concat("%",#{search_value}, "%") or goods_search_key like concat("%",#{search_value}, "%"))
		</if>
	</select>
	
	<select id="viewInfoChk" resultType="org.goods.domain.GoodsViewVO">
		select goods_id, user_id from tbl_goods_view
		where goods_id = #{goods_id} and user_id = #{user_id}
	</select>
	
	<insert id="viewCountUp">
		insert into tbl_goods_view (goods_id, user_id)
		values(#{goods_id}, #{user_id})
	</insert>
	
	<select id="getViewCnt" resultType="int">
		select count(goods_id) from tbl_goods_view
		where goods_id = #{goods_id}
	</select>
	
	<update id="relayViewCnt" parameterType="org.goods.domain.GoodsVO">
		update tbl_goods set 
		view_cnt = #{view_cnt}
		where goods_id = #{goods_id}
	</update>
	
	<select id="dupliCartChk" parameterType="org.goods.domain.CartVO" resultType="org.goods.domain.CartVO">
		select goods_id, amount, quantity from tbl_cart
		where user_id = #{user_id} and goods_id = #{goods_id}
	</select>
	
	<insert id="inserCart" parameterType="org.goods.domain.CartVO">
		insert into tbl_cart (user_id, goods_id, goods_image, goods_name, category_id, sell_price, amount, quantity, shipping_fee)
		values (#{user_id}, #{goods_id}, #{goods_image}, #{goods_name}, #{category_id}, #{sell_price}, #{amount}, #{quantity}, #{shipping_fee})
	</insert>
	
	<update id="updateCartCountUp" parameterType="org.goods.domain.CartVO">
		update tbl_cart set
		quantity = #{quantity}
		where user_id = #{user_id} and goods_id = #{goods_id}
	</update>
	
	<select id="viewCart" resultType="org.goods.domain.CartVO">
		select * from tbl_cart
		where user_id = #{user_id}
	</select>
	
	<delete id="cartDelete" parameterType="Map">
		delete from tbl_cart
		where user_id = #{user_id} and goods_id = #{goods_id} 
	</delete>
	
	<insert id="orderGoodsInsert" parameterType="org.goods.domain.OrderVO">
		insert into tbl_orders (order_number, goods_id, goods_image, goods_name, category_id, user_id, name, order_status, member_order, sell_price, all_price, discount_price, quantity, shipping_fee, post_code, address, payment)
		values
		<foreach collection="list" item="ovo" separator=",">
			(#{ovo.order_number}, #{ovo.goods_id}, #{ovo.goods_image}, #{ovo.goods_name}, #{ovo.category_id}, #{ovo.user_id}, #{ovo.name}, #{ovo.order_status}, #{ovo.member_order}, #{ovo.sell_price}, #{ovo.all_price}, #{ovo.discount_price}, #{ovo.quantity},#{ovo.shipping_fee}, #{ovo.post_code},  #{ovo.address}, #{ovo.payment})
		</foreach>
	</insert>
	
	<select id="getOrderNumber" parameterType="Map" resultType="org.goods.domain.OrderVO">
		select distinct order_number, user_id from tbl_orders
		where user_id = #{user_id}
		and ${searchKeyType} like concat("%",#{searchKeyValue}, "%") 
		and order_date between #{dayBegin} and DATE_ADD(#{dayEnd}, interval 1 day)
		order by order_date desc
		limit #{page_cnt}, #{PAGE_MAX_ORDER_CNT}
	</select>
	
	<select id="getAllOrderNumber" parameterType="Map" resultType="org.goods.domain.OrderVO">
		select distinct order_number, user_id from tbl_orders
		where user_id = #{user_id}
		and ${searchKeyType} like concat("%",#{searchKeyValue}, "%") 
		and order_date between #{dayBegin} and DATE_ADD(#{dayEnd}, interval 1 day)
		order by order_date desc
	</select>
	
	<select id="getOrdersForNumber" resultType="org.goods.domain.OrderVO">
		select * from tbl_orders
		where user_id = #{user_id} and order_number = #{order_number}
	</select>
	
	<select id="getOrdersForMember" parameterType="Map" resultType="org.goods.domain.OrderVO">
		select * from tbl_orders
		where goods_id = #{goods_id} and user_id = #{user_id}
	</select>
	
	<select id="getAllOrderStatus" resultType="org.goods.domain.OrderVO">
		select order_status from tbl_orders
		where user_id = #{user_id}
	</select>
	
<!--  	<insert id="mileageCountUp" parameterType="org.goods.domain.OrderVO">
		insert into tbl_mileage (accumulate_price, order_number, user_id)
		select sell_price*0.05,  order_number, user_id
		FROM tbl_orders 
		where order_number = #{order_number} and user_id = #{user_id} 
	</insert>-->
	
	<insert id="mileageCountUp" parameterType="org.goods.domain.OrderVO">
		insert into tbl_mileage (accumulate_price, order_number, user_id, reg_date)
		values(#{sell_price}*0.05, #{order_number}, #{user_id}, now())
	</insert>
	
	<insert id="deductionMileage" parameterType="org.goods.domain.OrderVO">
		insert into tbl_mileage (accumulate_price, order_number, user_id)
		values(-(#{discount_price}),#{order_number}, #{user_id})
	</insert>
	
	<select id="getGoodsAmount" resultType="org.goods.domain.GoodsVO">
		select amount from tbl_goods
		where goods_id = #{goods_id} 
	</select>
	
	<update id="deductionGoodsAmount" parameterType="org.goods.domain.OrderVO">
		update tbl_goods set
		amount = amount - #{quantity}
		where goods_id = #{goods_id}
	</update>
	
	<insert id="goodsReply" parameterType="org.goods.domain.OrderVO">
		insert into tbl_reply (score, user_id, nick_name, order_number, goods_id, goods_name, reply_content, up_date)
		values(#{score}, #{user_id}, #{nick_name}, #{order_number},  #{goods_id}, #{goods_name}, #{reply_content}, now())
	</insert>
	
	<select id="getReplyOneForUserId" resultType="org.goods.domain.ReplyVO">
		select reply_id from tbl_reply
		where user_id = #{user_id} and goods_id = #{goods_id}
		order by up_date desc
	</select>
	
	<select id="getReplyList" resultType="org.goods.domain.ReplyVO">
		select score, user_id, nick_name, goods_id, goods_name, reply_content, up_date
		from tbl_reply
		where goods_id = #{goods_id}
		order by up_date desc
	</select>
	
	<select id="getBestSale"  resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name, goods.sell_price
		from tbl_goods goods, tbl_orders orders
		where goods.goods_id = orders.goods_id
		group by orders.goods_id
		order by count(orders.goods_id) desc
		limit 0, #{bestItemCnt}
	</select>
	
	<select id="getGoodsBySkinType" parameterType="Map"  resultType="org.goods.domain.GoodsVO">
		select goods.goods_id, goods.goods_image, goods.goods_name, goods.sell_price
		from tbl_goods goods, tbl_orders orders
		where skin_type = #{skinType}
		and goods.goods_id = orders.goods_id
		group by orders.goods_id
		order by count(orders.goods_id) desc
		limit 0, #{bestItemCnt}
 	</select>
 	
 	<select id="getGoodsBySkinTypeAll" parameterType="Map"  resultType="org.goods.domain.GoodsVO">
 		select goods_id, goods_image, goods_name, sell_price
 		from tbl_goods
 		where skin_type = #{skinType}
 		limit 0, #{supportCnt}
 	</select>
 	
 	<update id="requestCancel"  parameterType="Map"  >
 		update tbl_orders set
 		customer_req = #{requestType},
 		 reguest_date = now()
 		where order_number = #{order_number} and goods_id = #{goods_id}
 	</update>
 	
 	<update id="purchaseConfirm"  parameterType="org.goods.domain.OrderVO"  >
 		update tbl_orders set
 		order_status = '구매확정'
 		where order_number = #{order_number} and goods_id = #{goods_id}
 	</update>
 	
	<delete id="mileageDelete" parameterType="org.member.domain.MemberVO">
		delete from tbl_mileage
		where user_id = #{user_id}
	</delete>
	
	<delete id="cartDeleteById" parameterType="org.member.domain.MemberVO">
		delete from tbl_cart
		where user_id = #{user_id}
	</delete>
	
	<delete id="cartAllDelete">
		delete from tbl_cart
		where user_id = #{user_id}
	</delete>
  
</mapper>

